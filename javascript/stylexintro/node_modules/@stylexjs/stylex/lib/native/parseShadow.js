"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseShadow = parseShadow;
const VALUES_REG = /,(?![^(]*\))/;
const PARTS_REG = /\s(?![^(]*\))/;
const LENGTH_REG = /^[0-9]+[a-zA-Z%]+?$/;
function isLength(v) {
  return v === "0" || LENGTH_REG.test(v);
}
function toMaybeNum(v) {
  if (!/px$/.test(v) && v !== "0") return v;
  const n = parseFloat(v);
  return !isNaN(n) ? n : v;
}
function parseValue(str) {
  const parts = str.split(PARTS_REG);
  const inset = parts.includes("inset");
  const last = parts.slice(-1)[0];
  const color = !isLength(last) ? last : null;
  const nums = parts.filter(n => n !== "inset").filter(n => n !== color).map(toMaybeNum);
  const [offsetX, offsetY, blurRadius, spreadRadius] = nums;
  return {
    inset,
    offsetX,
    offsetY,
    blurRadius,
    spreadRadius,
    color
  };
}
function parseShadow(str) {
  return str.split(VALUES_REG).map(s => s.trim()).map(parseValue);
}