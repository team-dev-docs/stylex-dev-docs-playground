"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CSSMediaQuery = void 0;
var _cssMediaquery = _interopRequireDefault(require("css-mediaquery"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const MQ_PREFIX = "@media";
class CSSMediaQuery {
  static isMediaQueryString(inp) {
    return inp.startsWith(MQ_PREFIX);
  }
  static resolveMediaQueries(styleObj, matchObj) {
    const mediaQueries = [];
    const result = {};
    for (const [key, value] of Object.entries(styleObj)) {
      if (value instanceof CSSMediaQuery) {
        mediaQueries.push(value);
      } else {
        result[key] = value;
      }
    }
    if (mediaQueries.length > 0) {
      for (const mqInst of mediaQueries) {
        const unresolvedMatchedStyle = mqInst.resolve(matchObj);
        const resolvedMatchedStyle = this.resolveMediaQueries(unresolvedMatchedStyle, matchObj);
        for (const propName in resolvedMatchedStyle) {
          result[propName] = resolvedMatchedStyle[propName];
        }
      }
    }
    return result;
  }
  constructor(query, matchedStyle) {
    this.query = query.replace(MQ_PREFIX, "");
    this.matchedStyle = matchedStyle;
  }
  resolve(matchObject) {
    const {
      width,
      height,
      direction
    } = matchObject;
    const matches = _cssMediaquery.default.match(this.query, {
      width,
      height,
      orientation: width > height ? "landscape" : "portrait",
      "aspect-ratio": width / height,
      direction: direction
    });
    return matches ? this.matchedStyle : {};
  }
}
exports.CSSMediaQuery = CSSMediaQuery;