/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

import { type SpreadOptions } from './SpreadOptions';
/**
 * The create method shim should do initial transforms like
 * renaming/expanding/validating properties, essentially all the steps
 * which can be done at initialization-time (could potentially be done at
 * compile-time in the future).
 */
export declare function create<S extends { [$$Key$$: string]: {} }>(
  styles: S,
): { [$$Key$$: string]: {} };
export declare const firstThatWorks: <T extends string | number>(
  ...values: ReadonlyArray<T>
) => T;
export declare function keyframes(): void;
/**
 * The spread method shim
 */

export declare function spread(
  style: null | undefined | { [key: string]: unknown },
  options: SpreadOptions,
): { [$$Key$$: string]: {} };
export type IStyleX = {
  create: typeof create;
  firstThatWorks: typeof firstThatWorks;
  keyframes: typeof keyframes;
  spread: typeof spread;
};
export declare const stylex: IStyleX;
declare const $$EXPORT_DEFAULT_DECLARATION$$: IStyleX;
export default $$EXPORT_DEFAULT_DECLARATION$$;
