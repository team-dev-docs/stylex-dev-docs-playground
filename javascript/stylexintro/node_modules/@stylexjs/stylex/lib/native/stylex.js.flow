/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict
 */

import { type SpreadOptions } from './SpreadOptions';

/**
 * The create method shim should do initial transforms like
 * renaming/expanding/validating properties, essentially all the steps
 * which can be done at initialization-time (could potentially be done at
 * compile-time in the future).
 */
declare export function create<S: { [string]: { ... } }>(styles: S): {
  [string]: { ... },
};

declare export const firstThatWorks: <T: string | number>(
  ...values: $ReadOnlyArray<T>
) => T;

declare export function keyframes(): void;

/**
 * The spread method shim
 */

declare export function spread(
  style: ?{ [key: string]: mixed },
  options: SpreadOptions,
): { [string]: { ... } };

export type IStyleX = {
  create: typeof create,
  firstThatWorks: typeof firstThatWorks,
  keyframes: typeof keyframes,
  spread: typeof spread,
};

declare export const stylex: IStyleX;

declare export default IStyleX;
