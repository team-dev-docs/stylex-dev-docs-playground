"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyframes = exports.inject = exports.include = exports.firstThatWorks = exports.default = exports.create = exports.UNSUPPORTED_PROPERTY = void 0;
exports.spread = spread;
exports.unstable_overrideVars = exports.unstable_createVars = exports.types = exports.stylex = void 0;
var _stylexInject = _interopRequireDefault(require("./stylex-inject"));
var _styleq = require("styleq");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function spread(styles, _options) {
  const [className, style] = (0, _styleq.styleq)(styles);
  return {
    className,
    style
  };
}
function stylexCreate(_styles) {
  throw new Error("stylex.create should never be called. It should be compiled away.");
}
function stylexCreateVars(_styles) {
  throw new Error("stylex.createVars should never be called. It should be compiled away.");
}
function stylexOverrideVars(_styles) {
  throw new Error("stylex.overrideVars should never be called. It should be compiled away.");
}
function stylexIncludes(_styles) {
  throw new Error("stylex.extends should never be called. It should be compiled away.");
}
const create = stylexCreate;
exports.create = create;
const unstable_createVars = stylexCreateVars;
exports.unstable_createVars = unstable_createVars;
const unstable_overrideVars = stylexOverrideVars;
exports.unstable_overrideVars = unstable_overrideVars;
const include = stylexIncludes;
exports.include = include;
const types = {
  angle: _v => {
    throw new Error(errorForType("angle"));
  },
  color: _v => {
    throw new Error(errorForType("color"));
  },
  url: _v => {
    throw new Error(errorForType("url"));
  },
  image: _v => {
    throw new Error(errorForType("image"));
  },
  integer: _v => {
    throw new Error(errorForType("integer"));
  },
  lengthPercentage: _v => {
    throw new Error(errorForType("lengthPercentage"));
  },
  length: _v => {
    throw new Error(errorForType("length"));
  },
  percentage: _v => {
    throw new Error(errorForType("percentage"));
  },
  number: _v => {
    throw new Error(errorForType("number"));
  },
  resolution: _v => {
    throw new Error(errorForType("resolution"));
  },
  time: _v => {
    throw new Error(errorForType("time"));
  },
  transformFunction: _v => {
    throw new Error(errorForType("transformFunction"));
  },
  transformList: _v => {
    throw new Error(errorForType("transformList"));
  }
};
exports.types = types;
const errorForType = type => `stylex.types.${type} should be compiled away by @stylexjs/babel-plugin`;
const keyframes = _keyframes => {
  throw new Error("stylex.keyframes should never be called");
};
exports.keyframes = keyframes;
const firstThatWorks = function () {
  throw new Error("stylex.firstThatWorks should never be called.");
};
exports.firstThatWorks = firstThatWorks;
const inject = _stylexInject.default;
exports.inject = inject;
const UNSUPPORTED_PROPERTY = _props => {
  throw new Error("stylex.UNSUPPORTED_PROPERTY should never be called. It should be compiled away.");
};
exports.UNSUPPORTED_PROPERTY = UNSUPPORTED_PROPERTY;
function _stylex() {
  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
    styles[_key] = arguments[_key];
  }
  const [className] = (0, _styleq.styleq)(styles);
  return className;
}
_stylex.spread = spread;
_stylex.create = create;
_stylex.unstable_createVars = unstable_createVars;
_stylex.unstable_overrideVars = unstable_overrideVars;
_stylex.include = include;
_stylex.keyframes = keyframes;
_stylex.firstThatWorks = firstThatWorks;
_stylex.inject = inject;
_stylex.UNSUPPORTED_PROPERTY = UNSUPPORTED_PROPERTY;
_stylex.types = types;
const stylex = _stylex;
exports.stylex = stylex;
var _default = _stylex;
exports.default = _default;