"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNKNOWN_PROP_KEY = exports.UNKNOWN_NAMESPACE = exports.UNEXPECTED_ARGUMENT = exports.UNBOUND_STYLEX_CALL_VALUE = exports.ONLY_TOP_LEVEL_INLCUDES = exports.ONLY_TOP_LEVEL = exports.NO_PROJECT_ROOT_DIRECTORY = exports.NO_PARENT_PATH = exports.NO_CONDITIONAL_SHORTHAND = exports.NON_STATIC_VALUE = exports.NON_OBJECT_FOR_STYLEX_CALL = exports.NON_EXPORT_NAMED_DECLARATION = exports.LOCAL_ONLY = exports.LINT_UNCLOSED_FUNCTION = exports.INVALID_SPREAD = exports.INVALID_PSEUDO_OR_AT_RULE = exports.INVALID_PSEUDO = exports.ILLEGAL_PROP_VALUE = exports.ILLEGAL_PROP_ARRAY_VALUE = exports.ILLEGAL_NESTED_PSEUDO = exports.ILLEGAL_NAMESPACE_VALUE = exports.ILLEGAL_NAMESPACE_TYPE = exports.ILLEGAL_ARGUMENT_LENGTH = exports.EXPECTED_FUNCTION_CALL = exports.ESCAPED_STYLEX_VALUE = exports.DUPLICATE_CONDITIONAL = void 0;
const ILLEGAL_ARGUMENT_LENGTH = "stylex() should have 1 argument.";
exports.ILLEGAL_ARGUMENT_LENGTH = ILLEGAL_ARGUMENT_LENGTH;
const NON_STATIC_VALUE = "Only static values are allowed inside of a stylex.create() call.";
exports.NON_STATIC_VALUE = NON_STATIC_VALUE;
const ESCAPED_STYLEX_VALUE = "Escaping a stylex.create() value is not allowed.";
exports.ESCAPED_STYLEX_VALUE = ESCAPED_STYLEX_VALUE;
const UNBOUND_STYLEX_CALL_VALUE = "stylex.create calls must be bound to a bare variable.";
exports.UNBOUND_STYLEX_CALL_VALUE = UNBOUND_STYLEX_CALL_VALUE;
const ONLY_TOP_LEVEL = "stylex.create() is only allowed at the root of a program.";
exports.ONLY_TOP_LEVEL = ONLY_TOP_LEVEL;
const NON_OBJECT_FOR_STYLEX_CALL = "stylex.create() can only accept a style object.";
exports.NON_OBJECT_FOR_STYLEX_CALL = NON_OBJECT_FOR_STYLEX_CALL;
const UNKNOWN_PROP_KEY = "Unknown property key";
exports.UNKNOWN_PROP_KEY = UNKNOWN_PROP_KEY;
const INVALID_PSEUDO = "Invalid pseudo selector, not on the whitelist.";
exports.INVALID_PSEUDO = INVALID_PSEUDO;
const INVALID_PSEUDO_OR_AT_RULE = "Invalid pseudo or at-rule.";
exports.INVALID_PSEUDO_OR_AT_RULE = INVALID_PSEUDO_OR_AT_RULE;
const NO_CONDITIONAL_SHORTHAND = "You cannot use conditional style values for a shorthand property.";
exports.NO_CONDITIONAL_SHORTHAND = NO_CONDITIONAL_SHORTHAND;
const ILLEGAL_NAMESPACE_TYPE = "Only a string literal namespace is allowed here.";
exports.ILLEGAL_NAMESPACE_TYPE = ILLEGAL_NAMESPACE_TYPE;
const UNKNOWN_NAMESPACE = "Unknown namespace";
exports.UNKNOWN_NAMESPACE = UNKNOWN_NAMESPACE;
const ILLEGAL_NESTED_PSEUDO = "Pseudo objects can't be nested more than one level deep.";
exports.ILLEGAL_NESTED_PSEUDO = ILLEGAL_NESTED_PSEUDO;
const ILLEGAL_PROP_VALUE = "A style value can only contain an array, string or number.";
exports.ILLEGAL_PROP_VALUE = ILLEGAL_PROP_VALUE;
const ILLEGAL_PROP_ARRAY_VALUE = "A style array value can only contain strings or numbers.";
exports.ILLEGAL_PROP_ARRAY_VALUE = ILLEGAL_PROP_ARRAY_VALUE;
const ILLEGAL_NAMESPACE_VALUE = "A stylex namespace must be an object.";
exports.ILLEGAL_NAMESPACE_VALUE = ILLEGAL_NAMESPACE_VALUE;
const INVALID_SPREAD = "Imported styles spread with a stylex.create call must be type cast as `XStyle<>` to verify their type.";
exports.INVALID_SPREAD = INVALID_SPREAD;
const LINT_UNCLOSED_FUNCTION = "Rule contains an unclosed function";
exports.LINT_UNCLOSED_FUNCTION = LINT_UNCLOSED_FUNCTION;
const LOCAL_ONLY = "The return value of stylex.create() should not be exported.";
exports.LOCAL_ONLY = LOCAL_ONLY;
const UNEXPECTED_ARGUMENT = "Unexpected argument passed to the stylex() function.";
exports.UNEXPECTED_ARGUMENT = UNEXPECTED_ARGUMENT;
const EXPECTED_FUNCTION_CALL = "Expected a simple function call but found something else.";
exports.EXPECTED_FUNCTION_CALL = EXPECTED_FUNCTION_CALL;
const NO_PARENT_PATH = "Unexpected AST node without a parent path.";
exports.NO_PARENT_PATH = NO_PARENT_PATH;
const ONLY_TOP_LEVEL_INLCUDES = "stylex.include() is only at the top level of a style definition object.";
exports.ONLY_TOP_LEVEL_INLCUDES = ONLY_TOP_LEVEL_INLCUDES;
const DUPLICATE_CONDITIONAL = "The same pseudo selector or at-rule cannot be used more than once.";
exports.DUPLICATE_CONDITIONAL = DUPLICATE_CONDITIONAL;
const NO_PROJECT_ROOT_DIRECTORY = "The project root directory `rootDir` is not configured.";
exports.NO_PROJECT_ROOT_DIRECTORY = NO_PROJECT_ROOT_DIRECTORY;
const NON_EXPORT_NAMED_DECLARATION = "The return value of stylex.createVars() must be bound to a named export.";
exports.NON_EXPORT_NAMED_DECLARATION = NON_EXPORT_NAMED_DECLARATION;